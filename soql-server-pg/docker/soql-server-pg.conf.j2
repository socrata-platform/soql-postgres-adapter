com.socrata.soql-server-pg {
  curator.ensemble = {{ ZOOKEEPER_ENSEMBLE }}
  service-advertisement.address = "{{ ARK_HOST }}"

  # TODO Support runtime port assignment so we can run more than one instance on a single node.
  # Need to take PORT_x env variables we get passed and advertise our port based on them.
  port = 6090
  liveness-check.port = 6091

  metrics {
    enable-graphite = {{ ENABLE_GRAPHITE }}
    graphite-host = "{{ GRAPHITE_HOST }}"
    graphite-port = "{{ GRAPHITE_PORT }}"
    log-metrics = {{ LOG_METRICS }}
  }

  store.database {
    host = "{{ PG_SECONDARY_DB_HOST }}"
    port = "{{ PG_SECONDARY_DB_PORT }}"
    database = "{{ PG_SECONDARY_DB_NAME }}"
    username = "{{ PG_SECONDARY_DB_USER }}"
    {{ PG_SECONDARY_DB_PASSWORD_LINE }}
    login-timeout = 10s
    connect-timeout = 10s
    cancel-signal-timeout = 10s
    connectionCustomizerClassName = com.socrata.thirdparty.c3p0.ConnectionCustomizer
    tcp-keep-alive = true
    c3p0 {
      extensions {
        onAcquire = "SET work_mem = '{{ PG_SECONDARY_WORK_MEM }}'; SET client_min_messages = '{{ PG_SECONDARY_CLIENT_MSG_LEVEL }}'; COMMIT"
      }
    }
  }

  migrations {
    database {
      app-name = "soql-server-pg"
      host = "{{ PG_SECONDARY_DB_HOST }}"
      port = "{{ PG_SECONDARY_DB_PORT }}"
      database = "{{ PG_SECONDARY_DB_NAME }}"
      username = "{{ PG_SECONDARY_MIGRATE_DB_USER }}"
      {{ PG_SECONDARY_MIGRATE_DB_PASSWORD_LINE }}
    }
    log4j = ${common-log4j}
    log4j.rootLogger = [ {{ LOG_LEVEL }}, console ]
  }

  instance = {{ PG_SECONDARY_INSTANCE }}
}

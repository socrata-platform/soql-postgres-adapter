#!/bin/sh
set -ev

if [ -n "$ECS_CONTAINER_METADATA_URI_V4" ]; then
    ARK_HOST="$(curl -sf "$ECS_CONTAINER_METADATA_URI_V4" | jq -r '.Networks[0].IPv4Addresses[0]')"
    export ARK_HOST
fi

if [ -z "$MARATHON_APP_ID" ] && [ -z "$ECS_CONTAINER_METADATA_URI_V4" ] ; then
  echo "Not running in marathon, so I won't compile the config templates!"
  echo "To force compilation of config, set the \$MARATHON_APP_ID config var."
else
  echo "Compiling config for ${SERVER_CONFIG}"
  /bin/env_parse ${SERVER_CONFIG}.j2
fi

su socrata -c '/usr/bin/java \
    -Dconfig.file=${SERVER_CONFIG} \
    -cp $SERVER_ARTIFACT \
    com.socrata.pg.server.MigrateSchema Migrate \
    com.socrata.soql-server-pg.migrations \
    '

exec su socrata -c 'exec /usr/bin/java \
    -Xmx${JAVA_XMX} \
    -Xms${JAVA_XMX} \
    -Dconfig.file=${SERVER_CONFIG} \
    -Djava.net.preferIPv4Stack=true \
    -Dcom.sun.management.jmxremote.port=${JMX_PORT} \
    -Dcom.sun.management.jmxremote.rmi.port=${JMX_PORT} \
    -Dcom.sun.management.jmxremote.ssl=false \
    -Dcom.sun.management.jmxremote.authenticate=false \
    -Djava.rmi.server.hostname=${ARK_HOST:-localhost} \
    -XX:MaxMetaspaceSize=${JAVA_MAX_METASPACE} \
    ${JAVA_OOM_BEHAVIOR} \
    -jar $SERVER_ARTIFACT \
    com.socrata.pg.server.QueryServer \
    '
